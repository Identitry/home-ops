---
apiVersion: v1
kind: Namespace
metadata:
  name: peanut
  labels:
    app.kubernetes.io/name: peanut
    app.kubernetes.io/instance: peanut
    ingress.svc.egress: allow # <--- opt-in label for ingress-controller traffic
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: peanut-config
  namespace: peanut
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 128Mi
  storageClassName: local
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: se-nut-upsmon
  namespace: peanut
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: infisical
  target:
    name: nut-upsmon
    creationPolicy: Owner
  data:
    - secretKey: NUT_UPSMON_USER
      remoteRef:
        key: /NUT/UPSMON_USER
    - secretKey: NUT_UPSMON_PASSWORD
      remoteRef:
        key: /NUT/UPSMON_PASSWORD
    - secretKey: NUT_HOST
      remoteRef:
        key: /NUT/HOST
    - secretKey: NUT_PORT
      remoteRef:
        key: /NUT/PORT
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: peanut
  namespace: peanut
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  install:
    remediation: { retries: -1 }
  upgrade:
    cleanupOnFail: true
    remediation: { retries: 3 }
  values:
    controllers:
      peanut:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert,nut-upsmon
        containers:
          app:
            image:
              repository: brandawg93/peanut
              tag: "v5.15.0@sha256:e3d60b03dae785d4fcd24074dd369d96d41ae37df23a3c06f3dcb2777cbb54f3"
            env:
              WEB_PORT: "8080"
              TZ: ${TZ}
            envFrom:
              - secretRef:
                  name: nut-upsmon
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet: { path: /api/ping, port: 8080 }
                  periodSeconds: 10
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet: { path: /api/ping, port: 8080 }
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests: { cpu: 10m }
              limits: { memory: 256Mi }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      peanut:
        enabled: true
        controller: peanut
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/api/v1/metrics"
        ports:
          http:
            port: 8080
            targetPort: http

    ingress:
      peanut:
        enabled: true
        className: tenant-root
        annotations:
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "peanut.${DOMAIN}"
          # --- Authentik forward-auth (NGINX Ingress) ---
          nginx.ingress.kubernetes.io/auth-url: "http://authentik-server.authentik.svc.cozy.local/outpost.goauthentik.io/auth/nginx"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
          nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-groups,X-authentik-jwt,X-authentik-meta"
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: peanut.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: peanut
                  port: http
        tls:
          - hosts: [ "peanut.${DOMAIN}" ]
            secretName: wildcard-le-tls-cert

    persistence:
      config:
        existingClaim: peanut-config
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/VictoriaMetrics/operator/main/config/crd/bases/operator.victoriametrics.com_vmservicescrapes.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMServiceScrape
metadata:
  name: peanut
  namespace: peanut
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: peanut
  namespaceSelector:
    matchNames:
      - peanut
  endpoints:
    - port: http
      path: /api/v1/metrics
      interval: 30s
      scheme: http
      honorLabels: false
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/grafana-operator/grafana-operator/main/config/crd/bases/grafana.integreatly.org_grafanadashboards.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: peanut
  namespace: peanut
spec:
  allowCrossNamespaceImport: true
  folder: ups
  instanceSelector:
    matchLabels:
      dashboards: grafana
  json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${ds_prometheus}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 10
                  },
                  {
                    "color": "yellow",
                    "value": 80
                  },
                  {
                    "color": "green",
                    "value": 100
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${ds_prometheus}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "ups_battery_charge{ups=\"$device\"}",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Battery Charge",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${ds_prometheus}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "yellow",
                    "value": 20
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 0
          },
          "id": 2,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${ds_prometheus}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "ups_ups_load{ups=\"$device\"}",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "UPS Load",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${ds_prometheus}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 0
          },
          "id": 3,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "datasource": { "type": "prometheus", "uid": "${ds_prometheus}" },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "ups_battery_runtime{ups=\"$device\"}",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Runtime",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${ds_prometheus}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "volt"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "ups_input_voltage{ups=\"$device\"}",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${ds_prometheus}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "ups_output_voltage{ups=\"$device\"}",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Voltage",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": "(.*ups_input_voltage.*)",
                "renamePattern": "Input Voltage"
              }
            },
            {
              "id": "renameByRegex",
              "options": {
                "regex": "(.*ups_output_voltage.*)",
                "renamePattern": "Output Voltage"
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${ds_prometheus}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 15
          },
          "id": 5,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "11.4.0",
          "targets": [
            {
              "datasource": { "type": "prometheus", "uid": "${ds_prometheus}" },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "{ups=\"$device\"}",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "",
          "transformations": [
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "Value",
                    "__name__"
                  ]
                }
              }
            },
            {
              "id": "renameByRegex",
              "options": {
                "regex": "__name__",
                "renamePattern": "Key"
              }
            }
          ],
          "type": "table"
        }
      ],
      "preload": false,
      "refresh": "10s",
      "schemaVersion": 40,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "text": "eatonups1",
              "value": "eatonups1"
            },
            "definition": "label_values(ups)",
            "includeAll": false,
            "label": "Device",
            "name": "device",
            "options": [],
            "query": {
              "qryType": 1,
              "query": "label_values(ups)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "type": "query"
          },
          {
            "current": {
              "text": "vm-longterm",
              "value": "b0b17f2d-6adf-41af-b993-4476a7202f2f"
            },
            "label": "Datasource",
            "name": "ds_prometheus",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "PeaNUT",
      "version": 4,
      "weekStart": ""
    }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-scrape-from-vmagent
  namespace: peanut
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: peanut
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cozy-monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: vmagent
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: tenant-root
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
