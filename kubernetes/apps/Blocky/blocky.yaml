---
apiVersion: v1
kind: Namespace
metadata:
  name: blocky
  labels:
    app.kubernetes.io/name: blocky
    pod-security.kubernetes.io/enforce: privileged
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/external-secrets/kubernetes-external-secrets/main/deploy/crds/external-secrets.io_externalsecrets.yaml
# External secret that contains the environment variables for the Gluetun container.
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: gluetun-env
  namespace: blocky
  annotations:
    reloader.stakater.com/match: "true"
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: infisical
  target:
    name: gluetun-env
    creationPolicy: Owner
  data:
    - secretKey: NORDVPN_WG_PRIVATE_KEY
      remoteRef:
        key: /GLUETUN/NORDVPN_WG_PRIVATE_KEY
    - secretKey: PUBLICIP_API
      remoteRef:
        key: /GLUETUN/PUBLICIP_API
    - secretKey: SERVER_COUNTRIES
      remoteRef:
        key: /GLUETUN/SERVER_COUNTRIES
    - secretKey: VPN_SERVICE_PROVIDER
      remoteRef:
        key: /GLUETUN/VPN_SERVICE_PROVIDER
    - secretKey: VPN_TYPE
      remoteRef:
        key: /GLUETUN/VPN_TYPE
    - secretKey: DOT_PROVIDERS
      remoteRef:
        key: /GLUETUN/DOT_PROVIDERS
---
# ConfigMap that contains the Blocky configuration file.
apiVersion: v1
kind: ConfigMap
metadata:
  name: blocky-config
  namespace: blocky
data:
  config.yml: |
    upstream:
      default:
        - https://1.1.1.1/dns-query
        - https://dns.quad9.net/dns-query
    blocking:
      blackLists:
        ads:
          - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
      clientGroupsBlock:
        default:
          - ads
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/spotahome/redis-operator/master/config/crd/bases/databases.spotahome.com_redisfailovers.yaml
# RedisFailover for Blocky, used for syncing the Blocky cache between multiple replicas.
apiVersion: databases.spotahome.com/v1
kind: RedisFailover
metadata:
  name: blocky-redis
  namespace: blocky
spec:
  sentinel:
    replicas: 3
  redis:
    replicas: 3
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# HelmRelease for Blocky, a DNS server for ad-blocking and more.
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
  namespace: blocky
spec:
  interval: 10m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  values:
    controllers:
      blocky:
        annotations:
          reloader.stakater.com/match: blocky-config,gluetun-env
        type: daemonset
        enabled: true

        initContainers:
          vpn:
            image:
              repository: qmcgaw/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
              pullPolicy: IfNotPresent
            restartPolicy: Always
            command: ["/gluetun-entrypoint"]
            args: ["run"]
            env:
              HEALTH_VPN_DURATION_INITIAL: 120s
              HEALTH_SUCCESS_WAIT_DURATION: 120s
              PUBLICIP_API: ${GLUETUN_PUBLICIP_API}
              VPN_SERVICE_PROVIDER: ${GLUETUN_VPN_SERVICE_PROVIDER}
              VPN_INTERFACE: wireguard0
              VPN_TYPE: ${GLUETUN_VPN_TYPE}
              DOT: "on"
              DOT_PROVIDERS: ${GLUETUN_DOT_PROVIDERS}
              VERSION_INFORMATION: "off"
              WIREGUARD_PRIVATE_KEY: ${NORDVPN_WG_PRIVATE_KEY}
              SERVER_COUNTRIES: ${GLUETUN_SERVER_COUNTRIES}
              #FIREWALL_VPN_INPUT_PORTS: 6881
              #FIREWALL_INPUT_PORTS: "8080"
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  #- SYS_MODULE
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  exec: &exec
                    command: [/gluetun-entrypoint, healthcheck]
                  periodSeconds: 60
              startup:
                <<: *probe
                spec:
                  exec: *exec
                  periodSeconds: 5

        containers:
          app:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26.2@sha256:46150ee0a8a414170ac861343ab7640eb0182a736f7d59f4c0c41383443932fd

            env:
              - name: REDIS_URL
                value: redis://blocky-redis:6379/0

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      blocky:
        controller: blocky
        type: LoadBalancer
        annotations:
          metallb.universe.tf/address-pool: cozystack
        externalIPs:
          - 192.168.222.100
        ports:
          dns:
            port: 53
            protocol: UDP
          dns-tcp:
            port: 53
            protocol: TCP
          ui:
            port: 4000
            protocol: TCP

    ingress:
      blocky:
        enabled: true
        className: tenant-root
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "blocky.${DOMAIN}"
        hosts:
          - host: blocky.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - blocky.${DOMAIN}
            secretName: wildcard-le-tls-cert-myk8s-se

    persistence:
      config:
        enabled: true
        type: configMap
        name: blocky-config
        items:
          - key: config.yml
            path: config.yml
        globalMounts:
          - path: /app/config/config.yml
            subPath: config.yml
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: blocky
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-ingress
  namespace: blocky
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: blocky
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector: {} # Allow from any namespace (or restrict if needed)
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-redis
  namespace: blocky
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: blocky
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/name: blocky
          podSelector:
            matchLabels:
              redisfailover: blocky-redis
      ports:
        - protocol: TCP
          port: 6379
