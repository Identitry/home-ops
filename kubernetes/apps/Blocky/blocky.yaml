---
apiVersion: v1
kind: Namespace
metadata:
  name: blocky
  labels:
    app.kubernetes.io/name: blocky
    pod-security.kubernetes.io/enforce: privileged
---
# ConfigMap that contains the Blocky configuration file.
apiVersion: v1
kind: ConfigMap
metadata:
  name: blocky-config
  namespace: blocky
data:
  config.yml: |
    # Upstream DNS options.
    upstreams:
      groups:
        default:
          - https://dns.quad9.net/dns-query
          - https://dns.google/dns-query
          - https://cloudflare-dns.com/dns-query
      # strategy: parallel_best (default)
      # timeout: 2s (default)

    # Ad blocking options (most taken from https://firebog.net/)
    blocking:
      denylists:
        ads:
          - https://v.firebog.net/hosts/static/w3kbl.txt
          - https://v.firebog.net/hosts/Easyprivacy.txt
          - https://v.firebog.net/hosts/Easylist.txt
          - https://v.firebog.net/hosts/Prigent-Ads.txt
          - https://v.firebog.net/hosts/Prigent-Crypto.txt
          - https://v.firebog.net/hosts/RPiList-Phishing.txt
          - https://v.firebog.net/hosts/RPiList-Malware.txt
          - https://big.oisd.nl/domainswild
      clientGroupsBlock:
        default:
          - ads

    # Caching options.
    caching:
      prefetching: true
      prefetchExpires: 2h

    # Prometheus metrics options.
    prometheus:
      enable: true
      path: /metrics

    # Redis cache options.
    redis:
      address: blocky-redis:6379
      sentinelAddresses:
        - sentinel:26379
      required: true

    - https://dns.quad9.net/dns-query
          - https://dns.google/dns-query
          - https://cloudflare-dns.com/dns-query


    bootstrapDns:
      - upstream: https://dns.quad9.net/dns-query
        ips:
          - 9.9.9.9
      - upstream: https://dns.google/dns-query
        ips:
          - 8.8.4.4
      - upstream: https://cloudflare-dns.com/dns-query
        ips:
          - 1.1.1.1

    minTlsServeVersion: "1.3"
    certFile: /tls/tls.crt
    keyFile: /tls/tls.key
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/spotahome/redis-operator/master/config/crd/bases/databases.spotahome.com_redisfailovers.yaml
# RedisFailover for Blocky, used for syncing the Blocky cache between multiple replicas.
apiVersion: databases.spotahome.com/v1
kind: RedisFailover
metadata:
  name: blocky-redis
  namespace: blocky
spec:
  sentinel:
    replicas: 3
  redis:
    replicas: 3
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# HelmRelease for Blocky, a DNS server for ad-blocking and more.
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
  namespace: blocky
spec:
  interval: 10m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  values:
    controllers:
      blocky:
        annotations:
          reloader.stakater.com/match: blocky-config
        type: daemonset
        enabled: true

        containers:
          app:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26.2@sha256:46150ee0a8a414170ac861343ab7640eb0182a736f7d59f4c0c41383443932fd

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      blocky:
        controller: blocky
        type: LoadBalancer
        annotations:
          metallb.universe.tf/address-pool: cozystack
        externalIPs:
          - 192.168.222.100
        ports:
          dns:
            port: 53
            protocol: UDP
          dns-tcp:
            port: 53
            protocol: TCP
          ui:
            port: 4000
            protocol: TCP

    ingress:
      blocky:
        enabled: true
        className: tenant-root
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "blocky.${DOMAIN}"
        hosts:
          - host: blocky.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - blocky.${DOMAIN}
            secretName: wildcard-le-tls-cert-myk8s-se

    persistence:
      config:
        enabled: true
        type: configMap
        name: blocky-config
        items:
          - key: config.yml
            path: config.yml
        globalMounts:
          - path: /app/config.yml
            subPath: config.yml
      tls-cert:
        type: secret
        name: wildcard-le-tls-cert-myk8s-se
        globalMounts:
          - path: /tls
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: blocky
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-ingress
  namespace: blocky
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: blocky
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector: {} # Allow from any namespace (or restrict if needed)
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-redis
  namespace: blocky
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: blocky
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/name: blocky
          podSelector:
            matchLabels:
              redisfailover: blocky-redis
      ports:
        - protocol: TCP
          port: 6379
