---
# Namespace for atuin
apiVersion: v1
kind: Namespace
metadata:
  name: atuin
  labels:
    app.kubernetes.io/name: atuin
    app.kubernetes.io/instance: atuin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: atuin-config
  namespace: atuin
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 256Mi
  storageClassName: local
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: atuin
  namespace: atuin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      atuin:
        containers:
          app:
            image:
              repository: ghcr.io/atuinsh/atuin
              tag: v18.8.0@sha256:8a8a8ef4eb5865656072bace5cc49390b56caa81360f9f0869054777155b6ef1
            env:
              ATUIN_HOST: "0.0.0.0"
              ATUIN_PORT: 80
              ATUIN_OPEN_REGISTRATION: "true"
              ATUIN_DB_URI: sqlite:///config/atuin.db
              TZ: ${TZ}
            command:
              - atuin
              - server
              - start
            ports:
              - name: http
                containerPort: 80
                protocol: TCP
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      atuin:
        controller: atuin
        ports:
          http:
            port: 80
            targetPort: http

    ingress:
      atuin:
        enabled: true
        className: tenant-root
        annotations:
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET_AUTHENTIK}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "atuin.${DOMAIN}"
        hosts:
          - host: atuin.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: atuin
                  port: http
        tls:
          - hosts:
              - atuin.${DOMAIN}
            secretName: wildcard-le-tls-cert

    persistence:
      config:
        existingClaim: atuin-config
