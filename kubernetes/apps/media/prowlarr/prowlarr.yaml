---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: local
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: se-prowlarr-api-key
  namespace: media
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: infisical
  target:
    name: prowlarr-api-key
    creationPolicy: Owner
  data:
    - secretKey: PROWLARR__AUTH__APIKEY
      remoteRef:
        key: /MEDIA/PROWLARR_API_KEY
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: media
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      prowlarr:
        containers:
          prowlarr:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.0.5.5160@sha256:47cede4c9e57c53af75b8b6e1382576ede241b9d847733ba449d723ca8cb51c8
              pullPolicy: IfNotPresent
            env:
              TZ: ${TZ}
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__APP__THEME: dark
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__LOG__LEVEL: info
            envFrom:
              - secretRef:
                  name: prowlarr-api-key
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      prowlarr:
        controller: prowlarr
        ports:
          http:
            port: 9696

    persistence:
      config:
        existingClaim: prowlarr-config
      tmp:
        type: emptyDir

    ingress:
      prowlarr:
        enabled: true
        className: tenant-root
        annotations:
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "p-arr.${DOMAIN}"
        hosts:
          - host: p-arr.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: prowlarr
                  port: http
        tls:
          - hosts:
              - p-arr.${DOMAIN}
            secretName: wildcard-le-tls-cert-myk8s-se
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prowlarr-from-ingress-and-namespace
  namespace: media
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: prowlarr
      app.kubernetes.io/instance: prowlarr
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: tenant-root
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: media
      ports:
        - protocol: TCP
          port: 9696
