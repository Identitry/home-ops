---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 5Gi
  storageClassName: local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 15Gi
  storageClassName: local
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.11.1@sha256:66f8c685241cb6d1611ddf90c593d47f18fb851d07d696b821280497f6f2b5b7
            env:
              TZ: ${TZ}
              #LIBVA_DRIVER_NAME: iHD
            ports:
              - name: http
                containerPort: 8096
                protocol: TCP
              - name: https
                containerPort: 8920
                protocol: TCP
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                memory: 8Gi
                gpu.intel.com/i915: 1
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44 # video
          - 107 # render
    service:
      app:
        type: LoadBalancer
        loadBalancerIP: 192.168.222.110
        annotations:
          lineage.cozystack.io/ignore: "true"
          external-dns.alpha.kubernetes.io/hostname: jellyfin.${DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: "212.107.149.106" # updated by cloudflare-ddns.
          metallb.io/address-pool: cozystack
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
            targetPort: http
          https:
            port: 8920
            targetPort: https
    persistence:
      config:
        existingClaim: jellyfin-config
        globalMounts:
          - path: /config
      config-cache:
        existingClaim: jellyfin-cache
        globalMounts:
          - path: /config/metadata
      media:
        type: persistentVolumeClaim
        existingClaim: media-rox
        globalMounts:
          - path: /media
            readOnly: true
      tmpfs:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        advancedMounts:
          jellyfin:
            app:
              - path: /cache
                subPath: cache
              - path: /config/log
                subPath: log
              - path: /tmp
                subPath: tmp
      tls-cert:
        type: secret
        name: wildcard-le-tls-cert
        globalMounts:
          - path: /tls
