---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: streamio-server-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aiostreams-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: streamio-flixio-data
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: local
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: es-stremio
  namespace: media
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: infisical
  target:
    name: stremio
    creationPolicy: Owner
  data:
    - secretKey: WEB_AUTH_KEY
      remoteRef:
        key: /MEDIA/STREMIO_WEB_AUTH_KEY
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: streamio
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      streamio-web:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert
        pod:
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
        containers:
          app:
            image:
              repository: ghcr.io/elfhosted/stremio-web
              tag: rolling@sha256:de20030d591000b871519899ccbcead9e958a8e1eb5e98d05b65e033286a7e2a
              pullPolicy: IfNotPresent
            env:
              TZ: ${TZ}
              SERVER_URL: http://streamio-server.media.svc:11470
              AUTO_SERVER_URL: 0
              #WEB_AUTH_KEY: ""
              API_ENDPOINT: http://streamio-flixio.media.svc:8080
              #FLIXIO_API_URL: http://streamio-flixio.media.svc:8080
            envFrom:
              - secretRef:
                  name: stremio

            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            probes:
              liveness:
                enabled: true
                type: HTTP
                path: /
                port: http
              readiness:
                enabled: true
                type: HTTP
                path: /
                port: http
              startup:
                enabled: true
                type: HTTP
                path: /
                port: http
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop: ["ALL"]
      streamio-flixio:
        containers:
          app:
            image:
              repository: ghcr.io/elfhosted/flixio-api
              tag: rolling@sha256:0e30427d9c311f806610951cfc8d8a71c1ba6b65c3ea1a93b829ed75e37138c9
              pullPolicy: IfNotPresent
            env:
              TZ: ${TZ}
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
      streamio-server:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert,media-gluetun-wg
        pod:
          labels:
            vpn: gluetun
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          vpn:
            image:
              repository: qmcgaw/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
              pullPolicy: IfNotPresent
            restartPolicy: Always
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - NET_ADMIN
            envFrom:
              - secretRef:
                  name: media-gluetun-wg
            env:
              VPN_TYPE: wireguard
              HEALTH_VPN_DURATION_INITIAL: 120s
              HEALTH_SUCCESS_WAIT_DURATION: 120s
              FIREWALL_INPUT_PORTS: "11470"
              TZ: ${TZ}
              VERSION_INFORMATION: "off"
              BLOCK_MALICIOUS: "off"
              BLOCK_SURVEILLANCE: "off"
              BLOCK_ADS: "off"
              DNS_UPDATE_PERIOD: "0"
              WIREGUARD_MTU: "1280"
            probes:
              liveness: &gluetunProbe
                enabled: true
                custom: true
                spec:
                  exec: &gluetunExec
                    command: [/gluetun-entrypoint, healthcheck]
                  periodSeconds: 60
              startup:
                <<: *gluetunProbe
                spec:
                  exec: *gluetunExec
                  periodSeconds: 5
                  failureThreshold: 120
                  timeoutSeconds: 5
          wait-vpn:
            image:
              repository: docker.io/library/busybox
              tag: "1.37.0"
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
            command:
              - sh
              - -c
              - |
                echo "Waiting for Gluetun health on :9999..."
                until wget -q --spider --timeout=2 --tries=1 http://127.0.0.1:9999; do
                  echo "Gluetun not healthy yet, retrying in 2s..."
                  sleep 2
                done
                echo "Connectivity OK, proceeding"
        containers:
          app:
            image:
              repository: ghcr.io/elfhosted/stremio-server
              tag: v4.20.8@sha256:24977206eff9aba5c4f62339401dccec7799be06378c35c59d3c5cc451899107
              pullPolicy: IfNotPresent
            env:
              TZ: ${TZ}
            ports:
              - name: http
                containerPort: 11470
                protocol: TCP
            probes:
              liveness:
                enabled: true
                type: TCP
                port: http
              readiness:
                enabled: true
                type: TCP
                port: http
              startup:
                enabled: true
                type: TCP
                port: http
                spec:
                  failureThreshold: 60
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
      aiostreams:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert,media-gluetun-wg
        pod:
          labels:
            vpn: gluetun
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          vpn:
            image:
              repository: qmcgaw/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
              pullPolicy: IfNotPresent
            restartPolicy: Always
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - NET_ADMIN
            envFrom:
              - secretRef:
                  name: media-gluetun-wg
            env:
              VPN_TYPE: wireguard
              HEALTH_VPN_DURATION_INITIAL: 120s
              HEALTH_SUCCESS_WAIT_DURATION: 120s
              FIREWALL_INPUT_PORTS: "3000"
              TZ: ${TZ}
              VERSION_INFORMATION: "off"
              BLOCK_MALICIOUS: "off"
              BLOCK_SURVEILLANCE: "off"
              BLOCK_ADS: "off"
              DNS_UPDATE_PERIOD: "0"
              WIREGUARD_MTU: "1280"
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec: *gluetunExec
                  periodSeconds: 60
              startup:
                enabled: true
                custom: true
                spec:
                  exec: *gluetunExec
                  periodSeconds: 5
                  failureThreshold: 120
                  timeoutSeconds: 5
          wait-vpn:
            image:
              repository: docker.io/library/busybox
              tag: "1.37.0"
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
            command:
              - sh
              - -c
              - |
                echo "Waiting for Gluetun health on :9999..."
                until wget -q --spider --timeout=2 --tries=1 http://127.0.0.1:9999; do
                  echo "Gluetun not healthy yet, retrying in 2s..."
                  sleep 2
                done
                echo "Connectivity OK, proceeding"
        containers:
          app:
            image:
              repository: ghcr.io/elfhosted/aiostreams-v1
              tag: v2.14.3@sha256:163bdddedec2492739955dfd283b0e29a10c8d390345d29c450a37957e7e5631
              pullPolicy: IfNotPresent
            env:
              TZ: ${TZ}
            ports:
              - name: http
                containerPort: 3000
                protocol: TCP
            probes:
              liveness:
                enabled: true
                type: HTTP
                path: /
                port: http
              readiness:
                enabled: true
                type: HTTP
                path: /
                port: http
              startup:
                enabled: true
                type: HTTP
                path: /
                port: http
                spec:
                  failureThreshold: 60
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      streamio-web:
        controller: streamio-web
        annotations:
          lineage.cozystack.io/ignore: "true"
        ports:
          http:
            port: 8080
            targetPort: http
      streamio-flixio:
        controller: streamio-flixio
        annotations:
          lineage.cozystack.io/ignore: "true"
        ports:
          http:
            port: 8080
            targetPort: http
      streamio-server:
        controller: streamio-server
        annotations:
          lineage.cozystack.io/ignore: "true"
        ports:
          http:
            port: 11470
            targetPort: http
      aiostreams:
        controller: aiostreams
        annotations:
          lineage.cozystack.io/ignore: "true"
        ports:
          http:
            port: 3000
            targetPort: http
    ingress:
      streamio-web:
        enabled: true
        className: tenant-root
        annotations:
          lineage.cozystack.io/ignore: "true"
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: str.myk8s.se
          nginx.ingress.kubernetes.io/auth-url: "http://authentik-server.authentik.svc.cozy.local/outpost.goauthentik.io/auth/nginx"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
          nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-groups,X-authentik-jwt,X-authentik-meta"
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Original-Method $request_method;
        hosts:
          - host: str.myk8s.se
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: streamio-web
                  port: http
        tls:
          - hosts: [str.myk8s.se]
            secretName: wildcard-le-tls-cert
    persistence:
      streamio-server-config:
        existingClaim: streamio-server-config
        advancedMounts:
          streamio-server:
            app:
              - path: /config
      streamio-server-media:
        type: persistentVolumeClaim
        existingClaim: media-rox
        advancedMounts:
          streamio-server:
            app:
              - path: /media
                readOnly: true
      streamio-flixio-data:
        existingClaim: streamio-flixio-data
        advancedMounts:
          streamio-flixio:
            app:
              - path: /app/data
      aiostreams-config:
        existingClaim: aiostreams-config
        advancedMounts:
          aiostreams:
            app:
              - path: /config
      aiostreams-media:
        type: persistentVolumeClaim
        existingClaim: media-rox
        advancedMounts:
          aiostreams:
            app:
              - path: /media
                readOnly: true
      tmp:
        type: emptyDir
        advancedMounts:
          streamio-server:
            app:
              - path: /tmp
          aiostreams:
            app:
              - path: /tmp
