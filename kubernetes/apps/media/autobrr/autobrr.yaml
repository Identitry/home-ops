---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: autobrr-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: local
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: se-autobrr-session-secret
  namespace: media
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: infisical
  target:
    name: autobrr-session-secret
    creationPolicy: Owner
  data:
    - secretKey: AUTOBRR__SESSION_SECRET
      remoteRef:
        key: /MEDIA/AUTOBRR_SESSION_SECRET
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: autobrr
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: cozy-fluxcd
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      autobrr:
        annotations:
          reloader.stakater.com/match: wildcard-le-tls-cert,autobrr-session-secret
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.67.0@sha256:af3fbcfa5f12b4bea8dc3338571071ed98e4caebb204cd50a31d5eff0a08152f
            env:
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: 7474
              AUTOBRR__METRICS_ENABLED: true
              AUTOBRR__METRICS_HOST: 0.0.0.0
              AUTOBRR__METRICS_PORT: &metricsPort 9094
              AUTOBRR__CHECK_FOR_UPDATES: false
              AUTOBRR__LOG_LEVEL: INFO
            envFrom:
              - secretRef:
                  name: autobrr-session-secret
            ports:
              - name: http
                containerPort: 7474
                protocol: TCP

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: 7474
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      autobrr:
        enabled: true
        controller: autobrr
        ports:
          http:
            port: 7474
            targetPort: http

    ingress:
      autobrr:
        enabled: true
        className: tenant-root
        annotations:
          external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_TARGET}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/hostname: "a-brr.${DOMAIN}"
          # --- Authentik forward-auth (NGINX Ingress) ---
          nginx.ingress.kubernetes.io/auth-url: "http://authentik-server.authentik.svc.cozy.local/outpost.goauthentik.io/auth/nginx"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
          nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-groups,X-authentik-jwt,X-authentik-meta"
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Original-Method $request_method;
        hosts:
          - host: a-brr.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: autobrr
                  port: http
        tls:
          - hosts:
              - a-brr.${DOMAIN}
            secretName: wildcard-le-tls-cert

    persistence:
      config:
        existingClaim: autobrr-config
      tmpfs:
        type: emptyDir
        advancedMounts:
          autobrr:
            app:
              - path: /config/log
                subPath: log
              - path: /tmp
                subPath: tmp
