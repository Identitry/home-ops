# ResourceSet for finalizing Cozystack deployment.
apiVersion: fluxcd.controlplane.io/v1
kind: ResourceSet
metadata:
  name: cert-manager-acme-config
  namespace: cozy-fluxcd
  annotations:
    fluxcd.controlplane.io/reconcile: "enabled"
    fluxcd.controlplane.io/reconcileEvery: "30m"
    fluxcd.controlplane.io/reconcileTimeout: "5m"
spec:
  dependsOn:
    - apiVersion: v1
      kind: Secret
      name: flux-secret
      namespace: cozy-fluxcd
      ready: true
  resources:
    # Cloudflare API Token secret, used by Cert Manager Cloud-Issuer to authenticate with Cloudflare.
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-token
        namespace: cozy-cert-manager
      type: Opaque
      stringData:
        api-token: ${CLOUDFLARE_API_TOKEN}

    # Create a cert-manager ClusterIssuer for Let's Encrypt.
    - apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-dns01
      spec:
        acme:
          email: ${ACME_EMAIL}z
          server: "https://acme-v02.api.letsencrypt.org/directory"
          # Required field for cert-manager v1:
          privateKeySecretRef:
            # This is just a name, can be any unique name, cert-manager will create/manage the secret automatically
            name: letsencrypt-production
          solvers:
            - dns01:
                cloudflare:
                  apiTokenSecretRef:
                    name: cloudflare-api-token
                    key: api-token

      # Create wildcard TLS Certificate for NGINX Ingress namespace (tenant-root).
    - apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: tls-wildcard-certificate
        namespace: tenant-root
      spec:
        dnsNames:
          - "*.${DOMAIN}"
          - "${DOMAIN}"
        secretName: tls-certificate
        issuerRef:
          name: letsencrypt-dns01
          kind: ClusterIssuer
